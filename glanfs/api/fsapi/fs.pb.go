// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.2
// source: fsapi/fs.proto

package fsapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Error int32

const (
	Error_ERROR_UNSPECIFIED Error = 0
	Error_ERROR_ENOENT      Error = 1
	Error_ERROR_ENOTDIR     Error = 2
	Error_ERROR_EEXIST      Error = 3
	Error_ERROR_EMSGSIZE    Error = 4
	Error_ERROR_ENOSPC      Error = 5
)

// Enum value maps for Error.
var (
	Error_name = map[int32]string{
		0: "ERROR_UNSPECIFIED",
		1: "ERROR_ENOENT",
		2: "ERROR_ENOTDIR",
		3: "ERROR_EEXIST",
		4: "ERROR_EMSGSIZE",
		5: "ERROR_ENOSPC",
	}
	Error_value = map[string]int32{
		"ERROR_UNSPECIFIED": 0,
		"ERROR_ENOENT":      1,
		"ERROR_ENOTDIR":     2,
		"ERROR_EEXIST":      3,
		"ERROR_EMSGSIZE":    4,
		"ERROR_ENOSPC":      5,
	}
)

func (x Error) Enum() *Error {
	p := new(Error)
	*p = x
	return p
}

func (x Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error) Descriptor() protoreflect.EnumDescriptor {
	return file_fsapi_fs_proto_enumTypes[0].Descriptor()
}

func (Error) Type() protoreflect.EnumType {
	return &file_fsapi_fs_proto_enumTypes[0]
}

func (x Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type FileType int32

const (
	FileType_FILE_TYPE_UNSPECIFIED FileType = 0
	FileType_FILE_TYPE_REGULAR     FileType = 1
	FileType_FILE_TYPE_DIRECTORY   FileType = 2
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "FILE_TYPE_UNSPECIFIED",
		1: "FILE_TYPE_REGULAR",
		2: "FILE_TYPE_DIRECTORY",
	}
	FileType_value = map[string]int32{
		"FILE_TYPE_UNSPECIFIED": 0,
		"FILE_TYPE_REGULAR":     1,
		"FILE_TYPE_DIRECTORY":   2,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_fsapi_fs_proto_enumTypes[1].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_fsapi_fs_proto_enumTypes[1]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Node struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          uint64                 `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Type        FileType               `protobuf:"varint,2,opt,name=type,enum=com.github.overmighty.glan.glanfs.api.fsapi.FileType"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_fsapi_fs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Node) GetId() uint64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *Node) GetType() FileType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Type
		}
	}
	return FileType_FILE_TYPE_UNSPECIFIED
}

func (x *Node) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Node) SetId(v uint64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Node) SetType(v FileType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Node) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Node) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Node) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Node) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Node) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *Node) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = FileType_FILE_TYPE_UNSPECIFIED
}

func (x *Node) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

type Node_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *uint64
	Type *FileType
	Name *string
}

func (b0 Node_builder) Build() *Node {
	m0 := &Node{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Type = *b.Type
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type Request struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Body isRequest_Body         `protobuf_oneof:"body"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_fsapi_fs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Request) GetLookup() *LookupRequest {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*request_Lookup); ok {
			return x.Lookup
		}
	}
	return nil
}

func (x *Request) GetCreate() *CreateRequest {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*request_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *Request) GetReaddir() *ReaddirRequest {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*request_Readdir); ok {
			return x.Readdir
		}
	}
	return nil
}

func (x *Request) GetGetattr() *GetattrRequest {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*request_Getattr); ok {
			return x.Getattr
		}
	}
	return nil
}

func (x *Request) GetWrite() *WriteRequest {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*request_Write); ok {
			return x.Write
		}
	}
	return nil
}

func (x *Request) GetRead() *ReadRequest {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*request_Read); ok {
			return x.Read
		}
	}
	return nil
}

func (x *Request) SetLookup(v *LookupRequest) {
	if v == nil {
		x.xxx_hidden_Body = nil
		return
	}
	x.xxx_hidden_Body = &request_Lookup{v}
}

func (x *Request) SetCreate(v *CreateRequest) {
	if v == nil {
		x.xxx_hidden_Body = nil
		return
	}
	x.xxx_hidden_Body = &request_Create{v}
}

func (x *Request) SetReaddir(v *ReaddirRequest) {
	if v == nil {
		x.xxx_hidden_Body = nil
		return
	}
	x.xxx_hidden_Body = &request_Readdir{v}
}

func (x *Request) SetGetattr(v *GetattrRequest) {
	if v == nil {
		x.xxx_hidden_Body = nil
		return
	}
	x.xxx_hidden_Body = &request_Getattr{v}
}

func (x *Request) SetWrite(v *WriteRequest) {
	if v == nil {
		x.xxx_hidden_Body = nil
		return
	}
	x.xxx_hidden_Body = &request_Write{v}
}

func (x *Request) SetRead(v *ReadRequest) {
	if v == nil {
		x.xxx_hidden_Body = nil
		return
	}
	x.xxx_hidden_Body = &request_Read{v}
}

func (x *Request) HasBody() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Body != nil
}

func (x *Request) HasLookup() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*request_Lookup)
	return ok
}

func (x *Request) HasCreate() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*request_Create)
	return ok
}

func (x *Request) HasReaddir() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*request_Readdir)
	return ok
}

func (x *Request) HasGetattr() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*request_Getattr)
	return ok
}

func (x *Request) HasWrite() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*request_Write)
	return ok
}

func (x *Request) HasRead() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*request_Read)
	return ok
}

func (x *Request) ClearBody() {
	x.xxx_hidden_Body = nil
}

func (x *Request) ClearLookup() {
	if _, ok := x.xxx_hidden_Body.(*request_Lookup); ok {
		x.xxx_hidden_Body = nil
	}
}

func (x *Request) ClearCreate() {
	if _, ok := x.xxx_hidden_Body.(*request_Create); ok {
		x.xxx_hidden_Body = nil
	}
}

func (x *Request) ClearReaddir() {
	if _, ok := x.xxx_hidden_Body.(*request_Readdir); ok {
		x.xxx_hidden_Body = nil
	}
}

func (x *Request) ClearGetattr() {
	if _, ok := x.xxx_hidden_Body.(*request_Getattr); ok {
		x.xxx_hidden_Body = nil
	}
}

func (x *Request) ClearWrite() {
	if _, ok := x.xxx_hidden_Body.(*request_Write); ok {
		x.xxx_hidden_Body = nil
	}
}

func (x *Request) ClearRead() {
	if _, ok := x.xxx_hidden_Body.(*request_Read); ok {
		x.xxx_hidden_Body = nil
	}
}

const Request_Body_not_set_case case_Request_Body = 0
const Request_Lookup_case case_Request_Body = 1
const Request_Create_case case_Request_Body = 2
const Request_Readdir_case case_Request_Body = 3
const Request_Getattr_case case_Request_Body = 4
const Request_Write_case case_Request_Body = 5
const Request_Read_case case_Request_Body = 6

func (x *Request) WhichBody() case_Request_Body {
	if x == nil {
		return Request_Body_not_set_case
	}
	switch x.xxx_hidden_Body.(type) {
	case *request_Lookup:
		return Request_Lookup_case
	case *request_Create:
		return Request_Create_case
	case *request_Readdir:
		return Request_Readdir_case
	case *request_Getattr:
		return Request_Getattr_case
	case *request_Write:
		return Request_Write_case
	case *request_Read:
		return Request_Read_case
	default:
		return Request_Body_not_set_case
	}
}

type Request_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Body:
	Lookup  *LookupRequest
	Create  *CreateRequest
	Readdir *ReaddirRequest
	Getattr *GetattrRequest
	Write   *WriteRequest
	Read    *ReadRequest
	// -- end of xxx_hidden_Body
}

func (b0 Request_builder) Build() *Request {
	m0 := &Request{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Lookup != nil {
		x.xxx_hidden_Body = &request_Lookup{b.Lookup}
	}
	if b.Create != nil {
		x.xxx_hidden_Body = &request_Create{b.Create}
	}
	if b.Readdir != nil {
		x.xxx_hidden_Body = &request_Readdir{b.Readdir}
	}
	if b.Getattr != nil {
		x.xxx_hidden_Body = &request_Getattr{b.Getattr}
	}
	if b.Write != nil {
		x.xxx_hidden_Body = &request_Write{b.Write}
	}
	if b.Read != nil {
		x.xxx_hidden_Body = &request_Read{b.Read}
	}
	return m0
}

type case_Request_Body protoreflect.FieldNumber

func (x case_Request_Body) String() string {
	md := file_fsapi_fs_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isRequest_Body interface {
	isRequest_Body()
}

type request_Lookup struct {
	Lookup *LookupRequest `protobuf:"bytes,1,opt,name=lookup,oneof"`
}

type request_Create struct {
	Create *CreateRequest `protobuf:"bytes,2,opt,name=create,oneof"`
}

type request_Readdir struct {
	Readdir *ReaddirRequest `protobuf:"bytes,3,opt,name=readdir,oneof"`
}

type request_Getattr struct {
	Getattr *GetattrRequest `protobuf:"bytes,4,opt,name=getattr,oneof"`
}

type request_Write struct {
	Write *WriteRequest `protobuf:"bytes,5,opt,name=write,oneof"`
}

type request_Read struct {
	Read *ReadRequest `protobuf:"bytes,6,opt,name=read,oneof"`
}

func (*request_Lookup) isRequest_Body() {}

func (*request_Create) isRequest_Body() {}

func (*request_Readdir) isRequest_Body() {}

func (*request_Getattr) isRequest_Body() {}

func (*request_Write) isRequest_Body() {}

func (*request_Read) isRequest_Body() {}

type Response struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Body isResponse_Body        `protobuf_oneof:"body"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_fsapi_fs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Response) GetError() Error {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*response_Error); ok {
			return x.Error
		}
	}
	return Error_ERROR_UNSPECIFIED
}

func (x *Response) GetLookup() *LookupResponse {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*response_Lookup); ok {
			return x.Lookup
		}
	}
	return nil
}

func (x *Response) GetCreate() *CreateResponse {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*response_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *Response) GetReaddir() *ReaddirResponse {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*response_Readdir); ok {
			return x.Readdir
		}
	}
	return nil
}

func (x *Response) GetGetattr() *GetattrResponse {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*response_Getattr); ok {
			return x.Getattr
		}
	}
	return nil
}

func (x *Response) GetWrite() *WriteResponse {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*response_Write); ok {
			return x.Write
		}
	}
	return nil
}

func (x *Response) GetRead() *ReadResponse {
	if x != nil {
		if x, ok := x.xxx_hidden_Body.(*response_Read); ok {
			return x.Read
		}
	}
	return nil
}

func (x *Response) SetError(v Error) {
	x.xxx_hidden_Body = &response_Error{v}
}

func (x *Response) SetLookup(v *LookupResponse) {
	if v == nil {
		x.xxx_hidden_Body = nil
		return
	}
	x.xxx_hidden_Body = &response_Lookup{v}
}

func (x *Response) SetCreate(v *CreateResponse) {
	if v == nil {
		x.xxx_hidden_Body = nil
		return
	}
	x.xxx_hidden_Body = &response_Create{v}
}

func (x *Response) SetReaddir(v *ReaddirResponse) {
	if v == nil {
		x.xxx_hidden_Body = nil
		return
	}
	x.xxx_hidden_Body = &response_Readdir{v}
}

func (x *Response) SetGetattr(v *GetattrResponse) {
	if v == nil {
		x.xxx_hidden_Body = nil
		return
	}
	x.xxx_hidden_Body = &response_Getattr{v}
}

func (x *Response) SetWrite(v *WriteResponse) {
	if v == nil {
		x.xxx_hidden_Body = nil
		return
	}
	x.xxx_hidden_Body = &response_Write{v}
}

func (x *Response) SetRead(v *ReadResponse) {
	if v == nil {
		x.xxx_hidden_Body = nil
		return
	}
	x.xxx_hidden_Body = &response_Read{v}
}

func (x *Response) HasBody() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Body != nil
}

func (x *Response) HasError() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*response_Error)
	return ok
}

func (x *Response) HasLookup() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*response_Lookup)
	return ok
}

func (x *Response) HasCreate() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*response_Create)
	return ok
}

func (x *Response) HasReaddir() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*response_Readdir)
	return ok
}

func (x *Response) HasGetattr() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*response_Getattr)
	return ok
}

func (x *Response) HasWrite() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*response_Write)
	return ok
}

func (x *Response) HasRead() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Body.(*response_Read)
	return ok
}

func (x *Response) ClearBody() {
	x.xxx_hidden_Body = nil
}

func (x *Response) ClearError() {
	if _, ok := x.xxx_hidden_Body.(*response_Error); ok {
		x.xxx_hidden_Body = nil
	}
}

func (x *Response) ClearLookup() {
	if _, ok := x.xxx_hidden_Body.(*response_Lookup); ok {
		x.xxx_hidden_Body = nil
	}
}

func (x *Response) ClearCreate() {
	if _, ok := x.xxx_hidden_Body.(*response_Create); ok {
		x.xxx_hidden_Body = nil
	}
}

func (x *Response) ClearReaddir() {
	if _, ok := x.xxx_hidden_Body.(*response_Readdir); ok {
		x.xxx_hidden_Body = nil
	}
}

func (x *Response) ClearGetattr() {
	if _, ok := x.xxx_hidden_Body.(*response_Getattr); ok {
		x.xxx_hidden_Body = nil
	}
}

func (x *Response) ClearWrite() {
	if _, ok := x.xxx_hidden_Body.(*response_Write); ok {
		x.xxx_hidden_Body = nil
	}
}

func (x *Response) ClearRead() {
	if _, ok := x.xxx_hidden_Body.(*response_Read); ok {
		x.xxx_hidden_Body = nil
	}
}

const Response_Body_not_set_case case_Response_Body = 0
const Response_Error_case case_Response_Body = 1
const Response_Lookup_case case_Response_Body = 2
const Response_Create_case case_Response_Body = 3
const Response_Readdir_case case_Response_Body = 4
const Response_Getattr_case case_Response_Body = 5
const Response_Write_case case_Response_Body = 6
const Response_Read_case case_Response_Body = 7

func (x *Response) WhichBody() case_Response_Body {
	if x == nil {
		return Response_Body_not_set_case
	}
	switch x.xxx_hidden_Body.(type) {
	case *response_Error:
		return Response_Error_case
	case *response_Lookup:
		return Response_Lookup_case
	case *response_Create:
		return Response_Create_case
	case *response_Readdir:
		return Response_Readdir_case
	case *response_Getattr:
		return Response_Getattr_case
	case *response_Write:
		return Response_Write_case
	case *response_Read:
		return Response_Read_case
	default:
		return Response_Body_not_set_case
	}
}

type Response_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Body:
	Error   *Error
	Lookup  *LookupResponse
	Create  *CreateResponse
	Readdir *ReaddirResponse
	Getattr *GetattrResponse
	Write   *WriteResponse
	Read    *ReadResponse
	// -- end of xxx_hidden_Body
}

func (b0 Response_builder) Build() *Response {
	m0 := &Response{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Error != nil {
		x.xxx_hidden_Body = &response_Error{*b.Error}
	}
	if b.Lookup != nil {
		x.xxx_hidden_Body = &response_Lookup{b.Lookup}
	}
	if b.Create != nil {
		x.xxx_hidden_Body = &response_Create{b.Create}
	}
	if b.Readdir != nil {
		x.xxx_hidden_Body = &response_Readdir{b.Readdir}
	}
	if b.Getattr != nil {
		x.xxx_hidden_Body = &response_Getattr{b.Getattr}
	}
	if b.Write != nil {
		x.xxx_hidden_Body = &response_Write{b.Write}
	}
	if b.Read != nil {
		x.xxx_hidden_Body = &response_Read{b.Read}
	}
	return m0
}

type case_Response_Body protoreflect.FieldNumber

func (x case_Response_Body) String() string {
	md := file_fsapi_fs_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isResponse_Body interface {
	isResponse_Body()
}

type response_Error struct {
	Error Error `protobuf:"varint,1,opt,name=error,enum=com.github.overmighty.glan.glanfs.api.fsapi.Error,oneof"`
}

type response_Lookup struct {
	Lookup *LookupResponse `protobuf:"bytes,2,opt,name=lookup,oneof"`
}

type response_Create struct {
	Create *CreateResponse `protobuf:"bytes,3,opt,name=create,oneof"`
}

type response_Readdir struct {
	Readdir *ReaddirResponse `protobuf:"bytes,4,opt,name=readdir,oneof"`
}

type response_Getattr struct {
	Getattr *GetattrResponse `protobuf:"bytes,5,opt,name=getattr,oneof"`
}

type response_Write struct {
	Write *WriteResponse `protobuf:"bytes,6,opt,name=write,oneof"`
}

type response_Read struct {
	Read *ReadResponse `protobuf:"bytes,7,opt,name=read,oneof"`
}

func (*response_Error) isResponse_Body() {}

func (*response_Lookup) isResponse_Body() {}

func (*response_Create) isResponse_Body() {}

func (*response_Readdir) isResponse_Body() {}

func (*response_Getattr) isResponse_Body() {}

func (*response_Write) isResponse_Body() {}

func (*response_Read) isResponse_Body() {}

type LookupRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ParentId    uint64                 `protobuf:"varint,1,opt,name=parent_id,json=parentId"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LookupRequest) Reset() {
	*x = LookupRequest{}
	mi := &file_fsapi_fs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupRequest) ProtoMessage() {}

func (x *LookupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LookupRequest) GetParentId() uint64 {
	if x != nil {
		return x.xxx_hidden_ParentId
	}
	return 0
}

func (x *LookupRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *LookupRequest) SetParentId(v uint64) {
	x.xxx_hidden_ParentId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *LookupRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *LookupRequest) HasParentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LookupRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LookupRequest) ClearParentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ParentId = 0
}

func (x *LookupRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type LookupRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ParentId *uint64
	Name     *string
}

func (b0 LookupRequest_builder) Build() *LookupRequest {
	m0 := &LookupRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ParentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ParentId = *b.ParentId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type LookupResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          uint64                 `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Type        FileType               `protobuf:"varint,2,opt,name=type,enum=com.github.overmighty.glan.glanfs.api.fsapi.FileType"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LookupResponse) Reset() {
	*x = LookupResponse{}
	mi := &file_fsapi_fs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupResponse) ProtoMessage() {}

func (x *LookupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LookupResponse) GetId() uint64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *LookupResponse) GetType() FileType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Type
		}
	}
	return FileType_FILE_TYPE_UNSPECIFIED
}

func (x *LookupResponse) SetId(v uint64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *LookupResponse) SetType(v FileType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *LookupResponse) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LookupResponse) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LookupResponse) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *LookupResponse) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = FileType_FILE_TYPE_UNSPECIFIED
}

type LookupResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *uint64
	Type *FileType
}

func (b0 LookupResponse_builder) Build() *LookupResponse {
	m0 := &LookupResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Type = *b.Type
	}
	return m0
}

type CreateRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ParentId    uint64                 `protobuf:"varint,1,opt,name=parent_id,json=parentId"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	mi := &file_fsapi_fs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateRequest) GetParentId() uint64 {
	if x != nil {
		return x.xxx_hidden_ParentId
	}
	return 0
}

func (x *CreateRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateRequest) SetParentId(v uint64) {
	x.xxx_hidden_ParentId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *CreateRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *CreateRequest) HasParentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateRequest) ClearParentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ParentId = 0
}

func (x *CreateRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type CreateRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ParentId *uint64
	Name     *string
}

func (b0 CreateRequest_builder) Build() *CreateRequest {
	m0 := &CreateRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ParentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ParentId = *b.ParentId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type CreateResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          uint64                 `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	mi := &file_fsapi_fs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateResponse) GetId() uint64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *CreateResponse) SetId(v uint64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *CreateResponse) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateResponse) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type CreateResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *uint64
}

func (b0 CreateResponse_builder) Build() *CreateResponse {
	m0 := &CreateResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type ReaddirRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          uint64                 `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReaddirRequest) Reset() {
	*x = ReaddirRequest{}
	mi := &file_fsapi_fs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReaddirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReaddirRequest) ProtoMessage() {}

func (x *ReaddirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReaddirRequest) GetId() uint64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *ReaddirRequest) SetId(v uint64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ReaddirRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReaddirRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type ReaddirRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *uint64
}

func (b0 ReaddirRequest_builder) Build() *ReaddirRequest {
	m0 := &ReaddirRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type ReaddirResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Entries *[]*Node               `protobuf:"bytes,1,rep,name=entries"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ReaddirResponse) Reset() {
	*x = ReaddirResponse{}
	mi := &file_fsapi_fs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReaddirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReaddirResponse) ProtoMessage() {}

func (x *ReaddirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReaddirResponse) GetEntries() []*Node {
	if x != nil {
		if x.xxx_hidden_Entries != nil {
			return *x.xxx_hidden_Entries
		}
	}
	return nil
}

func (x *ReaddirResponse) SetEntries(v []*Node) {
	x.xxx_hidden_Entries = &v
}

type ReaddirResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Entries []*Node
}

func (b0 ReaddirResponse_builder) Build() *ReaddirResponse {
	m0 := &ReaddirResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Entries = &b.Entries
	return m0
}

type GetattrRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          uint64                 `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetattrRequest) Reset() {
	*x = GetattrRequest{}
	mi := &file_fsapi_fs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetattrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetattrRequest) ProtoMessage() {}

func (x *GetattrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetattrRequest) GetId() uint64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *GetattrRequest) SetId(v uint64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetattrRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetattrRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type GetattrRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *uint64
}

func (b0 GetattrRequest_builder) Build() *GetattrRequest {
	m0 := &GetattrRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type GetattrResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Size        uint64                 `protobuf:"varint,1,opt,name=size"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetattrResponse) Reset() {
	*x = GetattrResponse{}
	mi := &file_fsapi_fs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetattrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetattrResponse) ProtoMessage() {}

func (x *GetattrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetattrResponse) GetSize() uint64 {
	if x != nil {
		return x.xxx_hidden_Size
	}
	return 0
}

func (x *GetattrResponse) SetSize(v uint64) {
	x.xxx_hidden_Size = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetattrResponse) HasSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetattrResponse) ClearSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Size = 0
}

type GetattrResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Size *uint64
}

func (b0 GetattrResponse_builder) Build() *GetattrResponse {
	m0 := &GetattrResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Size != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Size = *b.Size
	}
	return m0
}

type WriteRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          uint64                 `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Data        []byte                 `protobuf:"bytes,2,opt,name=data"`
	xxx_hidden_Offset      uint64                 `protobuf:"varint,3,opt,name=offset"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	mi := &file_fsapi_fs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *WriteRequest) GetId() uint64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *WriteRequest) GetData() []byte {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *WriteRequest) GetOffset() uint64 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *WriteRequest) SetId(v uint64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *WriteRequest) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *WriteRequest) SetOffset(v uint64) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *WriteRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *WriteRequest) HasData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *WriteRequest) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *WriteRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *WriteRequest) ClearData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data = nil
}

func (x *WriteRequest) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Offset = 0
}

type WriteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id     *uint64
	Data   []byte
	Offset *uint64
}

func (b0 WriteRequest_builder) Build() *WriteRequest {
	m0 := &WriteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Data != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Data = b.Data
	}
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Offset = *b.Offset
	}
	return m0
}

type WriteResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteResponse) Reset() {
	*x = WriteResponse{}
	mi := &file_fsapi_fs_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResponse) ProtoMessage() {}

func (x *WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type WriteResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 WriteResponse_builder) Build() *WriteResponse {
	m0 := &WriteResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ReadRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          uint64                 `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Size        uint64                 `protobuf:"varint,2,opt,name=size"`
	xxx_hidden_Offset      uint64                 `protobuf:"varint,3,opt,name=offset"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_fsapi_fs_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadRequest) GetId() uint64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *ReadRequest) GetSize() uint64 {
	if x != nil {
		return x.xxx_hidden_Size
	}
	return 0
}

func (x *ReadRequest) GetOffset() uint64 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *ReadRequest) SetId(v uint64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ReadRequest) SetSize(v uint64) {
	x.xxx_hidden_Size = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ReadRequest) SetOffset(v uint64) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ReadRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReadRequest) HasSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ReadRequest) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ReadRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *ReadRequest) ClearSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Size = 0
}

func (x *ReadRequest) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Offset = 0
}

type ReadRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id     *uint64
	Size   *uint64
	Offset *uint64
}

func (b0 ReadRequest_builder) Build() *ReadRequest {
	m0 := &ReadRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Size != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Size = *b.Size
	}
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Offset = *b.Offset
	}
	return m0
}

type ReadResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Data        []byte                 `protobuf:"bytes,1,opt,name=data"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_fsapi_fs_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fsapi_fs_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadResponse) GetData() []byte {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *ReadResponse) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ReadResponse) HasData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReadResponse) ClearData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Data = nil
}

type ReadResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Data []byte
}

func (b0 ReadResponse_builder) Build() *ReadResponse {
	m0 := &ReadResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Data != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Data = b.Data
	}
	return m0
}

var File_fsapi_fs_proto protoreflect.FileDescriptor

var file_fsapi_fs_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x66, 0x73, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x6f, 0x76, 0x65,
	0x72, 0x6d, 0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x2e, 0x67, 0x6c, 0x61,
	0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x73, 0x61, 0x70, 0x69, 0x22, 0x75, 0x0a,
	0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e,
	0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x73, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x92, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x54, 0x0a, 0x06, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x6f, 0x76,
	0x65, 0x72, 0x6d, 0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x2e, 0x67, 0x6c,
	0x61, 0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06,
	0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x54, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67,
	0x6c, 0x61, 0x6e, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x73, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x57, 0x0a, 0x07,
	0x72, 0x65, 0x61, 0x64, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6d,
	0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x66,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x64, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65,
	0x61, 0x64, 0x64, 0x69, 0x72, 0x12, 0x57, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x61, 0x74, 0x74, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67,
	0x6c, 0x61, 0x6e, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x73, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x61, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x74, 0x61, 0x74, 0x74, 0x72, 0x12, 0x51,
	0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6d,
	0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x66,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x12, 0x4e, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x6f, 0x76, 0x65,
	0x72, 0x6d, 0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x2e, 0x67, 0x6c, 0x61,
	0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x61,
	0x64, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xe5, 0x04, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67, 0x6c,
	0x61, 0x6e, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x73,
	0x61, 0x70, 0x69, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x55, 0x0a, 0x06, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x2e,
	0x67, 0x6c, 0x61, 0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x73, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x55, 0x0a, 0x06, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x67, 0x68, 0x74,
	0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x58, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x6f,
	0x76, 0x65, 0x72, 0x6d, 0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x2e, 0x67,
	0x6c, 0x61, 0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x73, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x64, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x64, 0x69, 0x72, 0x12, 0x58, 0x0a, 0x07, 0x67, 0x65,
	0x74, 0x61, 0x74, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x67,
	0x68, 0x74, 0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x66, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x61, 0x74, 0x74,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x74,
	0x61, 0x74, 0x74, 0x72, 0x12, 0x52, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e,
	0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x73, 0x61, 0x70,
	0x69, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67,
	0x6c, 0x61, 0x6e, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x73, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x22, 0x40, 0x0a, 0x0d, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x0e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x67, 0x68, 0x74, 0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e,
	0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x66, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x73, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x40, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x20, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x64, 0x69, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x64, 0x69,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x67, 0x68,
	0x74, 0x79, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x2e, 0x67, 0x6c, 0x61, 0x6e, 0x66, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x66, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x61, 0x74, 0x74,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x61,
	0x74, 0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x4a, 0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x0b,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x7b, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x4f, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x4f, 0x54, 0x44, 0x49, 0x52, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x4d, 0x53, 0x47,
	0x53, 0x49, 0x5a, 0x45, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x45, 0x4e, 0x4f, 0x53, 0x50, 0x43, 0x10, 0x05, 0x2a, 0x55, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x47,
	0x55, 0x4c, 0x41, 0x52, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x02, 0x42,
	0x0c, 0x5a, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x73, 0x61, 0x70, 0x69, 0x62, 0x08, 0x65,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var file_fsapi_fs_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_fsapi_fs_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_fsapi_fs_proto_goTypes = []any{
	(Error)(0),              // 0: com.github.overmighty.glan.glanfs.api.fsapi.Error
	(FileType)(0),           // 1: com.github.overmighty.glan.glanfs.api.fsapi.FileType
	(*Node)(nil),            // 2: com.github.overmighty.glan.glanfs.api.fsapi.Node
	(*Request)(nil),         // 3: com.github.overmighty.glan.glanfs.api.fsapi.Request
	(*Response)(nil),        // 4: com.github.overmighty.glan.glanfs.api.fsapi.Response
	(*LookupRequest)(nil),   // 5: com.github.overmighty.glan.glanfs.api.fsapi.LookupRequest
	(*LookupResponse)(nil),  // 6: com.github.overmighty.glan.glanfs.api.fsapi.LookupResponse
	(*CreateRequest)(nil),   // 7: com.github.overmighty.glan.glanfs.api.fsapi.CreateRequest
	(*CreateResponse)(nil),  // 8: com.github.overmighty.glan.glanfs.api.fsapi.CreateResponse
	(*ReaddirRequest)(nil),  // 9: com.github.overmighty.glan.glanfs.api.fsapi.ReaddirRequest
	(*ReaddirResponse)(nil), // 10: com.github.overmighty.glan.glanfs.api.fsapi.ReaddirResponse
	(*GetattrRequest)(nil),  // 11: com.github.overmighty.glan.glanfs.api.fsapi.GetattrRequest
	(*GetattrResponse)(nil), // 12: com.github.overmighty.glan.glanfs.api.fsapi.GetattrResponse
	(*WriteRequest)(nil),    // 13: com.github.overmighty.glan.glanfs.api.fsapi.WriteRequest
	(*WriteResponse)(nil),   // 14: com.github.overmighty.glan.glanfs.api.fsapi.WriteResponse
	(*ReadRequest)(nil),     // 15: com.github.overmighty.glan.glanfs.api.fsapi.ReadRequest
	(*ReadResponse)(nil),    // 16: com.github.overmighty.glan.glanfs.api.fsapi.ReadResponse
}
var file_fsapi_fs_proto_depIdxs = []int32{
	1,  // 0: com.github.overmighty.glan.glanfs.api.fsapi.Node.type:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.FileType
	5,  // 1: com.github.overmighty.glan.glanfs.api.fsapi.Request.lookup:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.LookupRequest
	7,  // 2: com.github.overmighty.glan.glanfs.api.fsapi.Request.create:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.CreateRequest
	9,  // 3: com.github.overmighty.glan.glanfs.api.fsapi.Request.readdir:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.ReaddirRequest
	11, // 4: com.github.overmighty.glan.glanfs.api.fsapi.Request.getattr:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.GetattrRequest
	13, // 5: com.github.overmighty.glan.glanfs.api.fsapi.Request.write:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.WriteRequest
	15, // 6: com.github.overmighty.glan.glanfs.api.fsapi.Request.read:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.ReadRequest
	0,  // 7: com.github.overmighty.glan.glanfs.api.fsapi.Response.error:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.Error
	6,  // 8: com.github.overmighty.glan.glanfs.api.fsapi.Response.lookup:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.LookupResponse
	8,  // 9: com.github.overmighty.glan.glanfs.api.fsapi.Response.create:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.CreateResponse
	10, // 10: com.github.overmighty.glan.glanfs.api.fsapi.Response.readdir:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.ReaddirResponse
	12, // 11: com.github.overmighty.glan.glanfs.api.fsapi.Response.getattr:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.GetattrResponse
	14, // 12: com.github.overmighty.glan.glanfs.api.fsapi.Response.write:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.WriteResponse
	16, // 13: com.github.overmighty.glan.glanfs.api.fsapi.Response.read:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.ReadResponse
	1,  // 14: com.github.overmighty.glan.glanfs.api.fsapi.LookupResponse.type:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.FileType
	2,  // 15: com.github.overmighty.glan.glanfs.api.fsapi.ReaddirResponse.entries:type_name -> com.github.overmighty.glan.glanfs.api.fsapi.Node
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_fsapi_fs_proto_init() }
func file_fsapi_fs_proto_init() {
	if File_fsapi_fs_proto != nil {
		return
	}
	file_fsapi_fs_proto_msgTypes[1].OneofWrappers = []any{
		(*request_Lookup)(nil),
		(*request_Create)(nil),
		(*request_Readdir)(nil),
		(*request_Getattr)(nil),
		(*request_Write)(nil),
		(*request_Read)(nil),
	}
	file_fsapi_fs_proto_msgTypes[2].OneofWrappers = []any{
		(*response_Error)(nil),
		(*response_Lookup)(nil),
		(*response_Create)(nil),
		(*response_Readdir)(nil),
		(*response_Getattr)(nil),
		(*response_Write)(nil),
		(*response_Read)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fsapi_fs_proto_rawDesc), len(file_fsapi_fs_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fsapi_fs_proto_goTypes,
		DependencyIndexes: file_fsapi_fs_proto_depIdxs,
		EnumInfos:         file_fsapi_fs_proto_enumTypes,
		MessageInfos:      file_fsapi_fs_proto_msgTypes,
	}.Build()
	File_fsapi_fs_proto = out.File
	file_fsapi_fs_proto_goTypes = nil
	file_fsapi_fs_proto_depIdxs = nil
}
